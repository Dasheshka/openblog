---
import ListRelatedPosts from "@/components/ListRelatedPosts.astro";
import TableOfContents from "@/components/TableOfContents.astro";
import Post from "@/layouts/Post.astro";
import { getPosts } from "@/lib/content";
import { getReadingTime } from "@/utils";
import { getCollection, type CollectionEntry } from "astro:content";

const posts = await getCollection("posts");
export async function getStaticPaths() {
  const posts = await getPosts();

  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}
type Props = CollectionEntry<"posts">;

const post = Astro.props;
const MAX_POSTS = 3;
const getRelatedPosts = (post: Props) => {
  if (post.data.tags) {
    const lowercaseTags = post.data.tags.map((tag) => tag.toLowerCase());
    const relatedPosts = posts.filter(
      (p) =>
        p.slug !== post.slug &&
        p.data.tags &&
        p.data.tags.some((t) => lowercaseTags.includes(t.toLowerCase())),
    );

    return relatedPosts.slice(0, MAX_POSTS);
  }

  return null;
};

const relatedPosts = getRelatedPosts(post);

const { Content, headings } = await post.render();

const readingTime = getReadingTime(post.body);
---

<Post data={post.data} {headings} readingTime={readingTime}>
  <aside class="hidden w-1/6 lg:block">
    <div class="sticky top-8">
      {headings?.length > 0 && <TableOfContents {headings} />}
    </div>
  </aside>

  <!-- post -->
  <div class="lg:w-4/6">
    <div
      id="postBody"
      class="prose prose-lg mb-12 min-w-full dark:prose-invert md:prose-xl"
    >
      <Content />
    </div>

    <!-- related posts -->
    <footer>
      <h2 class="mb-6 text-lg font-bold dark:text-white">Related Articles</h2>
      {relatedPosts && <ListRelatedPosts posts={relatedPosts} />}
    </footer>
  </div>
</Post>
