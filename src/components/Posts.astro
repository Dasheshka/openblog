---
import { configs } from "@/configs";
import { cn, getReadingTime, t } from "@/utils";
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";

interface Props {
  posts: CollectionEntry<"posts">[];
}

const { posts } = Astro.props;
---

{
  posts.length ? (
    <div class="grid gap-8 md:grid-cols-2 lg:grid-cols-3">
      {posts.map(async (post) => {
        const {
          body,
          data: { title, description, pubDate, coverImage, category },
          slug,
        } = post;
        const articlePubDate = pubDate.toISOString();
        const formattedDate = pubDate.toLocaleDateString(configs.website.lang, {
          day: "numeric",
          month: "short",
          year: "numeric",
        });

        return (
          <article>
            <a class="block" href={`/${category}/${slug}/`}>
              <Image
                class={cn(
                  "shadow-default mb-4 rounded-lg object-cover",
                  configs.postsGrid.postsGridCoverImageAspectRatio,
                )}
                src={coverImage}
                alt=""
                width={configs.postsGrid.postsGridCoverImageWidth}
                height={configs.postsGrid.postsGridCoverImageHeight}
                format="webp"
                quality={configs.postsGrid.postsGridCoverImageQuality}
              />
              <div class="flex flex-col gap-1">
                <div class="flex justify-between gap-2 text-sm">
                  <time datetime={articlePubDate}>{formattedDate}</time>
                  <span class="text-sm">
                    {getReadingTime(body)}
                    {t("reading-time")}
                  </span>
                </div>
                <div class="text-2xl font-bold">{title}</div>
                <p>{description}</p>
              </div>
            </a>
          </article>
        );
      })}
    </div>
  ) : (
    <div class="text-center text-2xl font-bold">{t("no-posts")}</div>
  )
}
