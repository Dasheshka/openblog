---
import { configs } from "@/configs";
import { getCategories, getTags } from "@/lib/content";
import "@/styles/global.css";
import { ViewTransitions } from "astro:transitions";

const {
  title,
  description = configs.website.description,
  ogImage = configs.website.ogImage,
  articleCategory,
  articleTags,
  articlePubDate,
  articleAuthor,
} = Astro.props;
const pageTitle =
  title === "root"
    ? configs.website.title
    : `${title} â€¢ ${configs.website.title}`;
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const ogImageURL = new URL(ogImage, Astro.url).href;

const categories = await getCategories();
const foundCategory =
  articleCategory && categories && categories.length
    ? categories.find((category) => articleCategory === category.id)
    : null;
const tags = await getTags();
const filteredTags =
  articleTags && tags && tags.length
    ? tags.filter((tag) => articleTags.includes(tag.id))
    : null;
---

<!-- Astro View Transitions: https://docs.astro.build/en/guides/view-transitions/ -->
<ViewTransitions />

<!-- Essentials -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title set:text={pageTitle} />
<meta name="title" content={pageTitle} />
<meta name="description" content={description} />
<meta name="author" content={configs.website.author} />
<meta name="referrer" content="no-referrer-when-downgrade" />
<link rel="canonical" href={canonicalURL} />
<link rel="sitemap" href="/sitemap-index.xml" />

<!-- Favicon -->
<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
<link rel="icon" href={configs.website.favicon} />
<link rel="manifest" href="/manifest.webmanifest" />
<meta name="apple-mobile-web-app-title" content={configs.website.title} />
<meta name="application-name" content={configs.website.title} />
<meta name="msapplication-TileColor" content="#8b5cf6" />
<meta name="theme-color" content="#8b5cf6" />

<!-- Open Graph: https://ogp.me/ -->
<meta property="og:site_name" content={configs.website.title} />
<meta property="og:type" content={articlePubDate ? "article" : "website"} />
<meta
  property="og:title"
  content={title === "root" ? configs.website.title : title}
/>
<meta property="og:description" content={description} />
<meta property="og:url" content={canonicalURL} />
<meta property="og:image" content={ogImageURL} />

<!-- Article -->
{
  articlePubDate && (
    <>
      {foundCategory && (
        <meta property="article:section" content={foundCategory.data.title} />
      )}
      {filteredTags &&
        filteredTags.map((tag) => (
          <meta property="article:tag" content={tag.data.title} />
        ))}
      <meta property="article:published_time" content={articlePubDate} />
      <meta
        property="article:author"
        content={articleAuthor || configs.website.author}
      />
    </>
  )
}

<!-- RSS -->
<link
  rel="alternate"
  href="/rss.xml"
  type="application/rss+xml"
  title={configs.website.title}
/>

<!-- Extra -->
<meta name="generator" content={Astro.generator} />
